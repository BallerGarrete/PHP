name: Deploy Telcoin Microservice App to AWS ECS

on:
  push:
    branches:
      - main
name: Deploy
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Composer
        run: |
          composer validate

      - name: Install Dependencies
        run: |
          composer install --optimize-autoloader --prefer-dist --no-progress --no-suggest
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get AWS ECR Credentials
        id: ecr-credentials
        run: |
          echo "::set-output name=username::AWS"
          echo "::set-output name=password::'aws ecr get-login-password'"

      - name: Docker Build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAGE: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/my-telcoin-ecr-repo:$IMAGE_TAG .
          docker push $ECR_REGISTRY/my-telcoin-ecr-repo:$IMAGE_TAG

      - name: Download Task Definition
        run: |
          aws ecs describe-task-definition --task-tefinition my-telcoin-ecr-repo --query taskDefinition > task-definition.json

      - name: Render Amazon ECS task definition for continer
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: main
          image: ${{ steps.login-ecr.outputs.registry }}/my-telcoin-ecr-repo:${{ github.sha }}

      - name: Deploy to Amazon ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: my-telcoin-cluster
          cluster: my-telcoin-service2
          wait-for-service-stability: true

